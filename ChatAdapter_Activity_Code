package com.newproj.whatsapp_clone.Adapter;

import android.app.AlertDialog;
import android.app.Dialog;
import android.content.Context;
import android.content.DialogInterface;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.database.FirebaseDatabase;
import com.newproj.whatsapp_clone.Model.MessageModel;
import com.newproj.whatsapp_clone.R;

import java.util.ArrayList;

public class Chatadpter extends RecyclerView.Adapter{

    ArrayList<MessageModel> messageModelArrayList;
    Context context;
    String recId;

    public Chatadpter(ArrayList<MessageModel> messageModelArrayList, Context context, String recId) {
        this.messageModelArrayList = messageModelArrayList;
        this.context = context;
        this.recId = recId;
    }

    int SENDER_VIEW_TYPE=1;
    int RECEVIEWR_VIEW_TYPE=2;

    public Chatadpter(ArrayList<MessageModel> messageModelArrayList, Context context) {
        this.messageModelArrayList = messageModelArrayList;
        this.context = context;
    }

    @NonNull
    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {

        if(viewType == SENDER_VIEW_TYPE){
            View view = LayoutInflater.from(context).inflate(R.layout.sample_sender,parent,false);
            return new Senderviewmodel(view);
        }
        else{
            View view = LayoutInflater.from(context).inflate(R.layout.sample_reciever,parent,false);
            return new Recevierviewmodel(view);
        }
    }

    @Override
    public int getItemViewType(int position) {

        if(messageModelArrayList.get(position).getUid().equals(FirebaseAuth.getInstance().getUid())){

            return SENDER_VIEW_TYPE;
        }
        else{
            return RECEVIEWR_VIEW_TYPE;
        }
    }

    @Override
    public void onBindViewHolder(@NonNull RecyclerView.ViewHolder holder, int position) {

        MessageModel messageModel = messageModelArrayList.get(position);

        holder.itemView.setOnLongClickListener(new View.OnLongClickListener() { // for deleting the message which we send
            @Override
            public boolean onLongClick(View view) {
                new AlertDialog.Builder(context)
                .setTitle("Delete")
                        .setMessage("Are you sure you want to delete this message")
                        .setPositiveButton("yes", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialogInterface, int i) {
                                FirebaseDatabase firebaseDatabase =  FirebaseDatabase.getInstance();
                                String sender = FirebaseAuth.getInstance().getUid()+recId;
                                firebaseDatabase.getReference().child("chats").child(sender).child(messageModel.getMessage()).setValue(null);                            }
                        }).setNegativeButton("No", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialogInterface, int i) {
                                dialogInterface.dismiss(); // for delete the message from firebase database
                            }
                        }).show();
                return false;
            }
        });

        if(holder.getClass() == Senderviewmodel.class){
            ((Senderviewmodel)holder).SenderMeg.setText(messageModel.getMessage());
        }else{
            ((Recevierviewmodel)holder).recieverMeg.setText(messageModel.getMessage());
        }

    }

    @Override
    public int getItemCount() {
        return messageModelArrayList.size();
    }

    public class Recevierviewmodel extends RecyclerView.ViewHolder{
        TextView recieverMeg, recievertime;
        public Recevierviewmodel(@NonNull View itemView) {
            super(itemView);

            recieverMeg = itemView.findViewById(R.id.recievertext);
            recievertime = itemView.findViewById(R.id.recieverTime);
        }


    }
    public class Senderviewmodel extends RecyclerView.ViewHolder{
        TextView SenderMeg, Sendertime;
        public Senderviewmodel(@NonNull View itemView) {
            super(itemView);

            SenderMeg = itemView.findViewById(R.id.SenderText);
            Sendertime = itemView.findViewById(R.id.senderTime);
        }
    }
}
