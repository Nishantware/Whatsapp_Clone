// Java Code
package com.newproj.whatsapp_clone;

import android.app.ProgressDialog;
import android.content.Intent;
import android.health.connect.datatypes.units.Length;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Toast;

import androidx.activity.EdgeToEdge;
import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.graphics.Insets;
import androidx.core.view.ViewCompat;
import androidx.core.view.WindowInsetsCompat;

import com.google.android.gms.auth.api.signin.GoogleSignIn;
import com.google.android.gms.auth.api.signin.GoogleSignInAccount;
import com.google.android.gms.auth.api.signin.GoogleSignInClient;
import com.google.android.gms.auth.api.signin.GoogleSignInOptions;
import com.google.android.gms.common.api.ApiException;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.android.material.snackbar.Snackbar;
import com.google.firebase.auth.AuthCredential;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.auth.GoogleAuthProvider;
import com.google.firebase.database.FirebaseDatabase;
import com.newproj.whatsapp_clone.databinding.ActivitySigninBinding;
import com.newproj.whatsapp_clone.databinding.ActivitySignupBinding;

public class Signin extends AppCompatActivity {

    ActivitySigninBinding binding;
    ProgressDialog progressDialog;
     FirebaseAuth auth;
     GoogleSignInClient mGoogleSignInClient;
     FirebaseDatabase database;



    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        EdgeToEdge.enable(this);
        binding = ActivitySigninBinding.inflate(getLayoutInflater());
        setContentView(binding.getRoot());


        auth= FirebaseAuth.getInstance();
        database= FirebaseDatabase.getInstance();

        progressDialog = new ProgressDialog(Signin.this);
        progressDialog.setTitle("Login");
        progressDialog.setMessage("Login in your account");


        // for google configure doing this we can directly sign in using google button form application
        GoogleSignInOptions gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)
                .requestIdToken(getString(R.string.default_web_client_id))
                        .requestEmail()
                                .build();

        mGoogleSignInClient = GoogleSignIn.getClient(this,gso);



        binding.btsignin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

              if(binding.editTextTextEmailAddress.getText().toString().isEmpty()){  // this for if you will not enter the email in during sign in it shows error and say write you email
                    binding.editTextTextEmailAddress.setError("Enter Your Email");
                    return;
                }

                if(binding.etuserpassword.getText().toString().isEmpty()){ // this for if you will not enter the password in during sign in it shows error and say write you password
                    binding.etuserpassword.setError("Enter Your Password");
                    return;
                }

//                progressDialog.show();
                auth.signInWithEmailAndPassword(binding.editTextTextEmailAddress.getText().toString(),binding.etuserpassword.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        progressDialog.dismiss();

                        if(task.isSuccessful()){

                            Intent intent = new Intent(Signin.this,MainActivity.class);
                            startActivity(intent);
                        }
                        else{

                            Toast.makeText(Signin.this,task.getException().getMessage(),Toast.LENGTH_LONG).show();

                        }
                    }
                });

            }
        });

       binding.tvclickforsignup.setOnClickListener(new View.OnClickListener() {  // when we click the signup option in signin activity what should happen for that
           @Override
           public void onClick(View view) {
               Intent intent = new Intent(Signin.this, Signup.class); // with the help of signin we go in signup for that we have written signin first then signup
               startActivity(intent);
           }
       });

       binding.btgoogle.setOnClickListener(new View.OnClickListener() { // sign in using firebase (this method send us to the the sign in function which we called below
           @Override
           public void onClick(View view) {
               signIn();
           }
       });

//        for when you finished the sign in then when we rerun the app user should display the mainactivity not show the signin or signup page again

      if(auth.getCurrentUser() != null){
          Intent intent = new Intent(Signin.this, MainActivity.class); // with the help of signin we go in mainactivity for that we have written signin first then main
          startActivity(intent);
      }

    }

    int RC_SIGN_IN = 65;

    private void signIn(){
        Intent signInIntent = mGoogleSignInClient.getSignInIntent();
        startActivityForResult(signInIntent,RC_SIGN_IN);  // using this line we can signn  in using firebase that page will open after completing that page prcoess then again come on sign in Activity
    }
    @Override
    public void onActivityResult (int requestcode , int resultcode, Intent data){ // using this fucntion we can get the data and come signin activity

        super.onActivityResult(requestcode, resultcode, data);

        if(requestcode==RC_SIGN_IN){
            Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);
            try{
                //google sign in succesfully

                GoogleSignInAccount account = task.getResult(ApiException.class);
                Log.d("TAG","Firebaseauthwithgoogle :"+account.getId());
                firebaseAuthWithGoogle(account.getIdToken());
            } catch (ApiException e) {
                Log.w("TAG","Google sign in failed",e);
            }
        }

    }

    private void firebaseAuthWithGoogle(String idToken) {
        AuthCredential credential = GoogleAuthProvider.getCredential(idToken, null);
        auth.signInWithCredential(credential)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            // Sign in success, update UI with the signed-in user's information
                            Log.d("TAG", "signInWithCredential:success");
                            FirebaseUser user = auth.getCurrentUser();

//                            for taking the profile pic , id ,name form google signin in firebase and deatil will show on firebase realtime database

                        Users users = new Users();
                        users.setUserId(user.getUid());
                        users.setUsername(user.getDisplayName());
                        users.setProfilepic(user.getPhotoUrl().toString());

                        database.getReference().child("Users").child(user.getUid()).setValue(users);

                            Intent intent = new Intent(Signin.this, MainActivity.class);
                            startActivity(intent);
                            Toast.makeText(Signin.this,"Sign in with Google",Toast.LENGTH_LONG).show();

                        } else {
                            // If sign in fails, display a message to the user
                            Log.w("TAG", "signInWithCredential:failure", task.getException());
                            Toast.makeText(Signin.this,task.getException().getMessage(),Toast.LENGTH_SHORT).show();
                            Snackbar.make(binding.getRoot(),"Authtication Failed", Snackbar.LENGTH_SHORT).show();
                        }
                    }


                });
    }

}
